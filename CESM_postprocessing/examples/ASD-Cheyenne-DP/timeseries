#! /bin/bash
##! /usr/bin/env bash
#
# template to activate the virtualenv, call post process program, deactivate virtualenv
#

##########
##
## General rules for determining PE counts and distribution across nodes
## ---------------------------------------------------------------------
##
## Averages:
##
## For avearges, set -N equal to the number of variables to be averaged 
## plus the number of averages to be computed. The ppn should always
## be set to 15 on cheyenne exclusive nodes. 
##
## For ocean hi-resolution or atm data sets with a lot of variables, 
## set the netcdf_format XML variable to netcdfLarge, change the queue to
## either geyser (shared) or bigmem (exclusive). For geyser, set -n to 16
## and ptile to 2 or more. Or, set -n < 16 and ptile to 1 which will 
## allow for more memory usage. The -W setting may also need to be 
## increased for large data sets.
##
##########
##
## Diagnostics:
##
## For diagnostics, the queue should always be set to geyser or caldera
## with the -n not to exceed the number of plot sets to be created. 
## The ptile can be adjusted depending on the size of the input climo
## and average files.
##
##########
##
## Variable Time series generation:
##
## On the cheyenne queues, -N should be set to total number of streams
## to be converted into variable timeseries * 16 minimum tasks per stream
## and ppn = 15. For geyser or caldera, the maximum -n is 16 and the 
## ppn can be adjusted based on what the memory requirements might
## be depending on the variable size and number of history time slices
## to be included in the final single variable output file.
##
##########

#PBS -N timeseries
#PBS -q regular
#PBS -l select=2:ncpus=36:mpiprocs=36
#PBS -l walltime=04:00:00
#PBS -A acgd0004
#PBS -o timeseries.stdout
#PBS -e timeseries.stderr
#PBS -m abe
#PBS -M aliceb@ucar.edu

echo "before init bash"
. /glade/u/apps/ch/opt/lmod/7.2.1/lmod/lmod/init/bash

export MP_TIMEOUT=14400
export MP_PULSE=1800
export MP_DEBUG_NOTIMEOUT=yes

if [ ! -e /glade/p/work/aliceb/sandboxes/dev/postprocessing_ch/cesm-env2/bin ]; then
    echo "*************************************************************************************"
    echo "CESM timeseries exiting due to non-existant python virtual environment in"
    echo "    /glade/p/work/aliceb/sandboxes/dev/postprocessing_ch/cesm-env2/bin"
    echo "You must first run:"
    echo "$SRCROOT/postprocessing/create_python_env.sh -machine [machine] -cimeroot [$CIMEROOT]"
    echo "*************************************************************************************"
    exit
fi


module restore system

module load python/2.7.13

echo "before activate"
cd /glade/p/work/aliceb/sandboxes/dev/postprocessing_ch/cesm-env2/bin
pwd
. activate

echo "before module loads"

module load python/2.7.13

module load numpy/1.12.0

module load scipy/0.18.1

module load impi/5.1.3.210

module load mpi4py/2.0.0-impi

module load pynio/1.4.1

module load matplotlib/2.0.0

module load intel/16.0.3

module load netcdf/4.4.1.1

module load nco/4.6.2

module load netcdf4-python/1.2.7

module load cf_units/1.1.3

module use /glade/u/apps/contrib/ncl-nightly/modules

module load ncltest-intel

echo "******************************************"
echo "Start timeseries generation $(date)"
echo "******************************************"

echo "before mpirun"

mpirun -n 72 ./cesm_tseries_generator.py --debug 2 --backtrace --caseroot /glade/p/work/aliceb/sandboxes/runs/b.e11.BDP.f09_g16.1980-11.011_pp --standalone >> /glade/p/work/aliceb/sandboxes/runs/b.e11.BDP.f09_g16.1980-11.011_pp/logs/timeseries.log 2>&1


echo "******************************************"
echo "End timeseries generation $(date)"
echo "******************************************"

deactivate
cd /glade/p/work/aliceb/sandboxes/runs/b.e11.BDP.f09_g16.1980-11.011_pp
